ggplot(aes(x=QUAL, y=qv, color=factor(type))) +
ggtitle(title)+
geom_point(size=15) +
geom_hline(size=10, yintercept=merfin[1], color="black") +
geom_hline(size=10, yintercept=merfin[2], color="grey") +
scale_color_manual(labels = c("Primary", "Alternate"), values=c("black","gray"))+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 50, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 00)),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 4, 0, "cm")
)+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = expansion(mult = c(0, .05)), labels = scales::label_number_si(accuracy = 1))+
ylab("QV")
bar_plot <- df %>%
ggplot(aes(x=V1, fill=factor(type))) +
geom_histogram(binwidth=1, color="#e9ecef", position = 'identity') +
scale_fill_manual(values=c("#ED1C24","#21409A"))+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 00)),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 4, 0, "cm")
)+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = c(0,0), labels = scales::label_number_si(accuracy = 1))+
ylab("Counts")
filtered_freq<-data.frame(table(filtered))
colnames(filtered_freq)<-c("QUAL","Freq")
unfiltered_freq<-data.frame(table(unfiltered))
colnames(unfiltered_freq)<-c("QUAL","Freq")
freq_table<-full_join(filtered_freq, unfiltered_freq, by = "QUAL")
freq_table[is.na(freq_table)] <- 0
colnames(freq_table)<-c("QUAL", "filtered_freq", "unfiltered_freq")
freq_table<-freq_table %>% mutate(diff=unfiltered_freq-filtered_freq)
freq<-bind_rows("filtered_freq" = freq_table %>% select(QUAL,filtered_freq) %>% rename(freq = filtered_freq),
"diff" = freq_table %>% select(QUAL,diff) %>% rename(freq = diff),
.id = "type")
freq <- freq %>% mutate(QUAL = as.numeric(levels(QUAL))[QUAL])
per_plot <- freq %>%
ggplot(aes(x=factor(QUAL), y=freq, fill=factor(type))) +
geom_col(position="fill")+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 0)),
axis.title.x = element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
axis.text.x=element_text(margin = margin(t = 20), angle = 45, hjust = 1),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 5, 0, "cm")
)+
scale_x_discrete(expand = c(0,0), breaks=c(0,25,50,75,max(df$V1)))+
scale_y_continuous(expand = c(0,0), breaks=c(0,0.5,1), labels = scales::number_format(accuracy = 0.1, decimal.mark = '.'))+
scale_fill_manual(labels = c("Filtered out", "Selected"), values = c("#ED1C24","#21409A"))+
ylab("Proportion")
return(list(qv_plot,bar_plot,per_plot))
}
qv_data<-read.csv("qual_vs_qv.txt", sep = "\t", header = TRUE)
bTaeGut1<-plot("bTaeGut1.qual.merfin.txt","bTaeGut1.qual.txt","bTaeGut1",c(44.40,42.05))
rGopEvg1<-plot("rGopEvg1.qual.merfin.txt","rGopEvg1.qual.txt","rGopEvg1",c(38.76,35.21))
fArcCen1<-plot("fArcCen1.qual.merfin.txt","fArcCen1.qual.txt","fArcCen1",c(32.50,31.56))
png("Fig. 4.png", width = 9000, height = 6000)
leg1 <- get_legend(
bTaeGut1[[1]] + theme(legend.margin = margin(0, 0, 150, 0),
legend.text = element_text(size = rel(text_size1)),
legend.position="bottom",
legend.key.size = unit(2,"cm"),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, color = NA),
legend.spacing.x = unit(1.0, 'cm'))
)
leg3 <- get_legend(
bTaeGut1[[2]] + theme(legend.margin = margin(0, 0, 150, 0),
legend.text = element_text(size = rel(text_size1)),
legend.position="bottom",
legend.key.size = unit(2,"cm"),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, color = NA),
legend.spacing.x = unit(1.0, 'cm'))
)
prow <- plot_grid( fArcCen1[[1]], rGopEvg1[[1]], bTaeGut1[[1]],
fArcCen1[[2]], rGopEvg1[[2]], bTaeGut1[[2]],
fArcCen1[[3]], rGopEvg1[[3]], bTaeGut1[[3]],
align = 'v',
labels = c("a", "b", "c", "d", "e", "f"),
label_size = 160,
label_fontface = "bold",
nrow = 3,
ncol = 3,
rel_heights = c(2,3,1)
)
blank_p <- plot_spacer() + theme_void()
# combine legend 1 & 2
leg123 <- plot_grid(blank_p, leg1, blank_p, leg3, blank_p,
ncol = 5
)
plot_grid(prow, leg123, ncol = 1, rel_heights = c(4,0.1))
dev.off()
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# library
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(cowplot)
library(patchwork)
text_size1=14
text_size2=160
plot <- function(file1,file2,title,merfin){
filtered<-read.csv(file1, header = FALSE)
unfiltered<-read.csv(file2, header = FALSE)
df <- bind_rows("Filtered out" = unfiltered,"Selected" = filtered, .id = "type")
df$type <- ordered(df$type, levels= c("Filtered out", "Selected"))
qv_data$type <- ordered(qv_data$type, levels= c("p", "a"))
qv_plot <- qv_data %>% filter(species==title) %>%
ggplot(aes(x=QUAL, y=qv, color=factor(type))) +
ggtitle(title)+
geom_point(size=15) +
geom_hline(size=10, yintercept=merfin[1], color="black") +
geom_hline(size=10, yintercept=merfin[2], color="grey") +
scale_color_manual(labels = c("Primary", "Alternate"), values=c("black","gray"))+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "dashed"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 50, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 00)),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 4, 0, "cm")
)+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = expansion(mult = c(0, .05)), labels = scales::label_number_si(accuracy = 1))+
ylab("QV")
bar_plot <- df %>%
ggplot(aes(x=V1, fill=factor(type))) +
geom_histogram(binwidth=1, color="#e9ecef", position = 'identity') +
scale_fill_manual(values=c("#ED1C24","#21409A"))+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "dashed"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 00)),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 4, 0, "cm")
)+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = c(0,0), labels = scales::label_number_si(accuracy = 1))+
ylab("Counts")
filtered_freq<-data.frame(table(filtered))
colnames(filtered_freq)<-c("QUAL","Freq")
unfiltered_freq<-data.frame(table(unfiltered))
colnames(unfiltered_freq)<-c("QUAL","Freq")
freq_table<-full_join(filtered_freq, unfiltered_freq, by = "QUAL")
freq_table[is.na(freq_table)] <- 0
colnames(freq_table)<-c("QUAL", "filtered_freq", "unfiltered_freq")
freq_table<-freq_table %>% mutate(diff=unfiltered_freq-filtered_freq)
freq<-bind_rows("filtered_freq" = freq_table %>% select(QUAL,filtered_freq) %>% rename(freq = filtered_freq),
"diff" = freq_table %>% select(QUAL,diff) %>% rename(freq = diff),
.id = "type")
freq <- freq %>% mutate(QUAL = as.numeric(levels(QUAL))[QUAL])
per_plot <- freq %>%
ggplot(aes(x=factor(QUAL), y=freq, fill=factor(type))) +
geom_col(position="fill")+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "dashed"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 0)),
axis.title.x = element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
axis.text.x=element_text(margin = margin(t = 20), angle = 45, hjust = 1),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 5, 0, "cm")
)+
scale_x_discrete(expand = c(0,0), breaks=c(0,25,50,75,max(df$V1)))+
scale_y_continuous(expand = c(0,0), breaks=c(0,0.5,1), labels = scales::number_format(accuracy = 0.1, decimal.mark = '.'))+
scale_fill_manual(labels = c("Filtered out", "Selected"), values = c("#ED1C24","#21409A"))+
ylab("Proportion")
return(list(qv_plot,bar_plot,per_plot))
}
qv_data<-read.csv("qual_vs_qv.txt", sep = "\t", header = TRUE)
bTaeGut1<-plot("bTaeGut1.qual.merfin.txt","bTaeGut1.qual.txt","bTaeGut1",c(44.40,42.05))
rGopEvg1<-plot("rGopEvg1.qual.merfin.txt","rGopEvg1.qual.txt","rGopEvg1",c(38.76,35.21))
fArcCen1<-plot("fArcCen1.qual.merfin.txt","fArcCen1.qual.txt","fArcCen1",c(32.50,31.56))
png("Fig. 5 main.png", width = 9000, height = 6000)
leg1 <- get_legend(
bTaeGut1[[1]] + theme(legend.margin = margin(0, 0, 150, 0),
legend.text = element_text(size = rel(text_size1)),
legend.position="bottom",
legend.key.size = unit(2,"cm"),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, color = NA),
legend.spacing.x = unit(1.0, 'cm'))
)
leg3 <- get_legend(
bTaeGut1[[2]] + theme(legend.margin = margin(0, 0, 150, 0),
legend.text = element_text(size = rel(text_size1)),
legend.position="bottom",
legend.key.size = unit(2,"cm"),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, color = NA),
legend.spacing.x = unit(1.0, 'cm'))
)
prow <- plot_grid( fArcCen1[[1]], rGopEvg1[[1]], bTaeGut1[[1]],
fArcCen1[[2]], rGopEvg1[[2]], bTaeGut1[[2]],
fArcCen1[[3]], rGopEvg1[[3]], bTaeGut1[[3]],
align = 'v',
labels = c("a", "b", "c", "d", "e", "f"),
label_size = 160,
label_fontface = "bold",
nrow = 3,
ncol = 3,
rel_heights = c(2,3,1)
)
blank_p <- plot_spacer() + theme_void()
# combine legend 1 & 2
leg123 <- plot_grid(blank_p, leg1, blank_p, leg3, blank_p,
ncol = 5
)
plot_grid(prow, leg123, ncol = 1, rel_heights = c(4,0.1))
dev.off()
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# library
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(cowplot)
library(patchwork)
text_size1=14
text_size2=160
plot <- function(file1,file2,title,merfin){
filtered<-read.csv(file1, header = FALSE)
unfiltered<-read.csv(file2, header = FALSE)
df <- bind_rows("Filtered out" = unfiltered,"Selected" = filtered, .id = "type")
df$type <- ordered(df$type, levels= c("Filtered out", "Selected"))
qv_data$type <- ordered(qv_data$type, levels= c("p", "a"))
qv_plot <- qv_data %>% filter(species==title) %>%
ggplot(aes(x=QUAL, y=qv, color=factor(type))) +
ggtitle(title)+
geom_point(size=15) +
geom_hline(size=10, yintercept=merfin[1], color="black", linetype="dashed") +
geom_hline(size=10, yintercept=merfin[2], color="grey", linetype="dashed") +
scale_color_manual(labels = c("Primary", "Alternate"), values=c("black","gray"))+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 50, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 00)),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 4, 0, "cm")
)+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = expansion(mult = c(0, .05)), labels = scales::label_number_si(accuracy = 1))+
ylab("QV")
bar_plot <- df %>%
ggplot(aes(x=V1, fill=factor(type))) +
geom_histogram(binwidth=1, color="#e9ecef", position = 'identity') +
scale_fill_manual(values=c("#ED1C24","#21409A"))+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 00)),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 4, 0, "cm")
)+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(expand = c(0,0), labels = scales::label_number_si(accuracy = 1))+
ylab("Counts")
filtered_freq<-data.frame(table(filtered))
colnames(filtered_freq)<-c("QUAL","Freq")
unfiltered_freq<-data.frame(table(unfiltered))
colnames(unfiltered_freq)<-c("QUAL","Freq")
freq_table<-full_join(filtered_freq, unfiltered_freq, by = "QUAL")
freq_table[is.na(freq_table)] <- 0
colnames(freq_table)<-c("QUAL", "filtered_freq", "unfiltered_freq")
freq_table<-freq_table %>% mutate(diff=unfiltered_freq-filtered_freq)
freq<-bind_rows("filtered_freq" = freq_table %>% select(QUAL,filtered_freq) %>% rename(freq = filtered_freq),
"diff" = freq_table %>% select(QUAL,diff) %>% rename(freq = diff),
.id = "type")
freq <- freq %>% mutate(QUAL = as.numeric(levels(QUAL))[QUAL])
per_plot <- freq %>%
ggplot(aes(x=factor(QUAL), y=freq, fill=factor(type))) +
geom_col(position="fill")+
theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
panel.grid.minor = element_line(size = 1, linetype = 'dotted',
colour = "grey"),
plot.title = element_text(family = "Arial", hjust = 0.5,
size = rel(text_size1), colour = "black", face="bold",
margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title = element_text(family = "Arial",
size = rel(text_size1), colour = "black", face="bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 60, b = 0, l = 0)),
axis.title.x = element_blank(),
axis.text = element_text(family = "Arial",
size = rel(text_size1), colour = "black"),
axis.ticks = element_line(size = 4),
axis.ticks.length = unit(1,"cm"),
axis.text.x=element_text(margin = margin(t = 20), angle = 45, hjust = 1),
plot.tag = element_text(size = rel(text_size1), face = "bold"),
legend.position = "none",
strip.background = element_blank(), strip.text = element_blank(),
panel.spacing = unit(0, "lines"),
plot.margin = margin(0, 2, 5, 0, "cm")
)+
scale_x_discrete(expand = c(0,0), breaks=c(0,25,50,75,max(df$V1)))+
scale_y_continuous(expand = c(0,0), breaks=c(0,0.5,1), labels = scales::number_format(accuracy = 0.1, decimal.mark = '.'))+
scale_fill_manual(labels = c("Filtered out", "Selected"), values = c("#ED1C24","#21409A"))+
ylab("Proportion")
return(list(qv_plot,bar_plot,per_plot))
}
qv_data<-read.csv("qual_vs_qv.txt", sep = "\t", header = TRUE)
bTaeGut1<-plot("bTaeGut1.qual.merfin.txt","bTaeGut1.qual.txt","bTaeGut1",c(44.40,42.05))
rGopEvg1<-plot("rGopEvg1.qual.merfin.txt","rGopEvg1.qual.txt","rGopEvg1",c(38.76,35.21))
fArcCen1<-plot("fArcCen1.qual.merfin.txt","fArcCen1.qual.txt","fArcCen1",c(32.50,31.56))
png("Fig. 5 main.png", width = 9000, height = 6000)
leg1 <- get_legend(
bTaeGut1[[1]] + theme(legend.margin = margin(0, 0, 150, 0),
legend.text = element_text(size = rel(text_size1)),
legend.position="bottom",
legend.key.size = unit(2,"cm"),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, color = NA),
legend.spacing.x = unit(1.0, 'cm'))
)
leg3 <- get_legend(
bTaeGut1[[2]] + theme(legend.margin = margin(0, 0, 150, 0),
legend.text = element_text(size = rel(text_size1)),
legend.position="bottom",
legend.key.size = unit(2,"cm"),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, color = NA),
legend.spacing.x = unit(1.0, 'cm'))
)
prow <- plot_grid( fArcCen1[[1]], rGopEvg1[[1]], bTaeGut1[[1]],
fArcCen1[[2]], rGopEvg1[[2]], bTaeGut1[[2]],
fArcCen1[[3]], rGopEvg1[[3]], bTaeGut1[[3]],
align = 'v',
labels = c("a", "b", "c", "d", "e", "f"),
label_size = 160,
label_fontface = "bold",
nrow = 3,
ncol = 3,
rel_heights = c(2,3,1)
)
blank_p <- plot_spacer() + theme_void()
# combine legend 1 & 2
leg123 <- plot_grid(blank_p, leg1, blank_p, leg3, blank_p,
ncol = 5
)
plot_grid(prow, leg123, ncol = 1, rel_heights = c(4,0.1))
dev.off()
